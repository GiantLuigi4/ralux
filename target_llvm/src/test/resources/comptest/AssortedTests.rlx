pkg comptest;

public class AssortedTests {
    public static int max(int left, int right) {
        return left + (right - left) * (left < right);
    }

    public static int clamp(int value, int min, int max) {
        int v0 = value + (min - value) * (value < min);
        return v0 + (max - v0) * (v0 > max);
    }

    public static int max(int a, int b, int c, int d, int e, int f, int g, int h) {
        int v0 = a + (b - a) * (a < b);
        int v1 = d + (c - d) * (d < c);
        int v2 = e + (f - e) * (e < f);
        int v3 = g + (h - g) * (g < h);
        int v4 = v0 + (v1 - v0) * (v0 < v1);
        int v5 = v2 + (v3 - v2) * (v2 < v3);
        int v6 = v4 + (v5 - v4) * (v4 < v5);
        return v6;
    }

    public static double dot(
        double x0, double y0, double z0,
        double x1, double y1, double z1
    ) {
        return x0 * x1 + y0 * y1 + z0 * z1;
    }

    public static int isLeftMin(int left, int middle, int right) {
        return left < middle && middle < right;
    }

    public static int conditionalCode(int value) {
        if (value > 10 || value < 3)
            value += 5;
        return value;
    }

    public static int whileTest(int value) {
        while (value < 0) {
            value -= (int) (value * 1.5);
        }
        if (value == 0) value += 1;
        while (value < 5 && value > 0) {
            value += value;
        }
        return value;
    }

    public static int main() {
        for (int i = 0; i < 30; i++) {
        }
        if (i < 30) {
            i = 0;
        } else if (i >= 30) {
            i = 400;
        }
        return i;
    }
}
